{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pdurgadatafactory"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2new_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase2new'"
		},
		"Final_target_AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Final_target_AzureBlobStorage'"
		},
		"MySql_Onpremise_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'MySql_Onpremise'"
		},
		"default_properties_schema_name_value": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"default_properties_database_name_value": {
			"type": "string",
			"defaultValue": "familyinfodb"
		},
		"AzureBlobStoragesouce_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'AzureBlobStoragesouce'"
		},
		"AzureBlobStoragetarget_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'AzureBlobStoragetarget'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "pdurgasqlserver.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "creativitydb"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "creativity"
		},
		"AzureSqlDatabase2new_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "pdurgasqlserver.database.windows.net"
		},
		"AzureSqlDatabase2new_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "creativitydb"
		},
		"AzureSqlDatabase2new_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Access Token"
		},
		"Final_AzureBlobStorage_source_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'Final_AzureBlobStorage_source'"
		},
		"blobsource_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'blobsource'"
		},
		"new blob_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'new blob'"
		},
		"newBlobStorage_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'newBlobStorage'"
		},
		"MySql_Onpremise_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"MySql_Onpremise_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().database_name}"
		},
		"MySql_Onpremise_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "root"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {
				"schema_name": {
					"type": "string",
					"value": "[parameters('default_properties_schema_name_value')]"
				},
				"database_name": {
					"type": "string",
					"value": "[parameters('default_properties_database_name_value')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStoragesouce')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('AzureBlobStoragesouce_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStoragetarget')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('AzureBlobStoragetarget_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2361365873163623.3.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "14.2.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2new')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase2new_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase2new_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase2new_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase2new_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Final_AzureBlobStorage_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('Final_AzureBlobStorage_source_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Final_target_AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Final_target_AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobsource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('blobsource_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/new blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('new blob_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/newBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('newBlobStorage_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesdata_Hourly_Job')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-10-07T05:14:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								20
							],
							"hours": [
								16
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimeselfhosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "practice",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsAzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "first",
						"type": "nvarchar"
					},
					{
						"name": " last",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "newBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"input": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().input",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "first",
						"type": "String"
					},
					{
						"name": " last",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/newBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "newBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "targetcon"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/newBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_target_Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "newBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "string"
					},
					"output_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().output_filename",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().path",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/newBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySql_Onpremise')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"database_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySql_Onpremise_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySql_Onpremise_properties_typeProperties_database')]",
					"username": "[parameters('MySql_Onpremise_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySql_Onpremise_password')]"
					},
					"driverVersion": "v2"
				},
				"connectVia": {
					"referenceName": "integrationRuntimeselfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeselfhosted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parameter parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "first",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "first",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": " last",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " last",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source",
								"type": "DatasetReference",
								"parameters": {
									"input": {
										"value": "@pipeline().parameters.input_para",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.inputfile_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"path": {
										"value": "@pipeline().parameters.ouput_para",
										"type": "Expression"
									},
									"output_filename": {
										"value": "@pipeline().parameters.outputfile_name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"input_para": {
						"type": "string"
					},
					"ouput_para": {
						"type": "string"
					},
					"inputfile_name": {
						"type": "string"
					},
					"outputfile_name": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_target_Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlTablesorce_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySql_Onpremise",
					"type": "LinkedServiceReference",
					"parameters": {
						"database_name": {
							"value": "@dataset().database_name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"database_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySql_Onpremise')]"
			]
		}
	]
}